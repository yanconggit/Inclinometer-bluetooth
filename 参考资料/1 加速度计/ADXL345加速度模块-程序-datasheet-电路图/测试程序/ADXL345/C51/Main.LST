C51 COMPILER V9.54   MAIN                                                                  08/25/2023 20:11:43 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN Main.OBJ
COMPILER INVOKED BY: E:\C\Keil_v5\C51\BIN\C51.EXE Main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*
   2           * ADXL345模块
   3           * 
   4           * 用途：ADXL345模块IIC测试程序
   5           * 
   6           * 作者         日期        备注
   7           *      2010/12/10      新增
   8           *      2010/12/11      修改
   9           * 
  10           */
  11          
  12          #include  <REG51.H> 
  13          #include  <math.h>    //Keil library  
  14          #include  <stdio.h>   //Keil library  
  15          #include  <INTRINS.H>
  16          
  17          #define   uchar unsigned char
  18          #define   uint unsigned int 
  19          #define   DataPort P2    //LCD1602数据端口
  20          
  21          sbit    SCL=P0^6;      //IIC时钟引脚定义
  22          sbit    SDA=P0^7;      //IIC数据引脚定义
  23          
  24          sbit      LCM_RS=P0^3;   //LCD1602命令端口    
  25          sbit      LCM_RW=P0^2;   //LCD1602命令端口    
  26          sbit      LCM_EN=P0^1;   //LCD1602命令端口
  27          
  28          #define SlaveAddress   0xA6   //定义器件在IIC总线中的从地址,根据ALT  ADDRESS地址引脚不同修改
  29                                        //ALT  ADDRESS引脚接地时地址为0xA6，接电源时地址为0x3A
  30          typedef unsigned char  BYTE;
  31          typedef unsigned short WORD;
  32          
  33          BYTE BUF[8];                         //接收数据缓存区       
  34          uchar ge,shi,bai,qian,wan;           //显示变量
  35          int  dis_data;                       //变量
  36          
  37          void delay(unsigned int k);
  38          void InitLcd();                      //初始化lcd1602
  39          void Init_ADXL345(void);             //初始化ADXL345
  40          
  41          void WriteDataLCM(uchar dataW);
  42          void WriteCommandLCM(uchar CMD,uchar Attribc);
  43          void DisplayOneChar(uchar X,uchar Y,uchar DData);
  44          void conversion(uint temp_data);
  45          
  46          void  Single_Write_ADXL345(uchar REG_Address,uchar REG_data);   //单个写入数据
  47          uchar Single_Read_ADXL345(uchar REG_Address);                   //单个读取内部寄存器数据
  48          void  Multiple_Read_ADXL345();                                  //连续的读取内部寄存器数据
  49          //------------------------------------
  50          void Delay5us();
  51          void Delay5ms();
  52          void ADXL345_Start();
  53          void ADXL345_Stop();
  54          void ADXL345_SendACK(bit ack);
  55          bit  ADXL345_RecvACK();
C51 COMPILER V9.54   MAIN                                                                  08/25/2023 20:11:43 PAGE 2   

  56          void ADXL345_SendByte(BYTE dat);
  57          BYTE ADXL345_RecvByte();
  58          void ADXL345_ReadPage();
  59          void ADXL345_WritePage();
  60          //-----------------------------------
  61          
  62          //*********************************************************
  63          void conversion(uint temp_data)  
  64          {  
  65   1          wan=temp_data/10000+0x30 ;
  66   1          temp_data=temp_data%10000;   //取余运算
  67   1        qian=temp_data/1000+0x30 ;
  68   1          temp_data=temp_data%1000;    //取余运算
  69   1          bai=temp_data/100+0x30   ;
  70   1          temp_data=temp_data%100;     //取余运算
  71   1          shi=temp_data/10+0x30    ;
  72   1          temp_data=temp_data%10;      //取余运算
  73   1          ge=temp_data+0x30;  
  74   1      }
  75          
  76          /*******************************/
  77          void delay(unsigned int k)  
  78          {           
  79   1      unsigned int i,j;       
  80   1        for(i=0;i<k;i++)
  81   1        {     
  82   2        for(j=0;j<121;j++)      
  83   2        {;}}            
  84   1      }
  85          /*******************************/
  86          void WaitForEnable(void)  
  87          {         
  88   1        DataPort=0xff;    
  89   1        LCM_RS=0;LCM_RW=1;_nop_();
  90   1        LCM_EN=1;_nop_();_nop_();
  91   1        while(DataPort&0x80); 
  92   1        LCM_EN=0;       
  93   1      }         
  94          /*******************************/
  95          void WriteCommandLCM(uchar CMD,uchar Attribc)
  96          {         
  97   1        if(Attribc)WaitForEnable(); 
  98   1        LCM_RS=0;LCM_RW=0;_nop_();
  99   1        DataPort=CMD;_nop_(); 
 100   1        LCM_EN=1;_nop_();_nop_();LCM_EN=0;
 101   1      }         
 102          /*******************************/
 103          void WriteDataLCM(uchar dataW)
 104          {         
 105   1        WaitForEnable();    
 106   1        LCM_RS=1;LCM_RW=0;_nop_();
 107   1        DataPort=dataW;_nop_(); 
 108   1        LCM_EN=1;_nop_();_nop_();LCM_EN=0;
 109   1      }   
 110          /***********************************/
 111          void InitLcd()        
 112          {     
 113   1        WriteCommandLCM(0x38,1);  
 114   1        WriteCommandLCM(0x08,1);  
 115   1        WriteCommandLCM(0x01,1);  
 116   1        WriteCommandLCM(0x06,1);  
 117   1        WriteCommandLCM(0x0c,1);
C51 COMPILER V9.54   MAIN                                                                  08/25/2023 20:11:43 PAGE 3   

 118   1      }     
 119          /***********************************/
 120          void DisplayOneChar(uchar X,uchar Y,uchar DData)
 121          {           
 122   1        Y&=1;           
 123   1        X&=15;            
 124   1        if(Y)X|=0x40;         
 125   1        X|=0x80;      
 126   1        WriteCommandLCM(X,0);   
 127   1        WriteDataLCM(DData);    
 128   1      }           
 129          
 130          /**************************************
 131          延时5微秒(STC90C52RC---12MHz---12T)
 132          不同的工作环境,需要调整此函数，注意时钟过快时需要修改
 133          当改用1T的MCU时,请调整此延时函数
 134          **************************************/
 135          void Delay5us()
 136          {
 137   1          _nop_();_nop_();_nop_();_nop_();
 138   1          _nop_();_nop_();_nop_();_nop_();
 139   1        _nop_();_nop_();_nop_();_nop_();
 140   1      }
 141          
 142          /**************************************
 143          延时5毫秒(STC90C52RC@12M)
 144          不同的工作环境,需要调整此函数
 145          当改用1T的MCU时,请调整此延时函数
 146          **************************************/
 147          void Delay5ms()
 148          {
 149   1          WORD n = 560;
 150   1      
 151   1          while (n--);
 152   1      }
 153          
 154          /**************************************
 155          起始信号
 156          **************************************/
 157          void ADXL345_Start()
 158          {
 159   1          SDA = 1;                    //拉高数据线
 160   1          SCL = 1;                    //拉高时钟线
 161   1          Delay5us();                 //延时
 162   1          SDA = 0;                    //产生下降沿
 163   1          Delay5us();                 //延时
 164   1          SCL = 0;                    //拉低时钟线
 165   1      }
 166          
 167          /**************************************
 168          停止信号
 169          **************************************/
 170          void ADXL345_Stop()
 171          {
 172   1          SDA = 0;                    //拉低数据线
 173   1          SCL = 1;                    //拉高时钟线
 174   1          Delay5us();                 //延时
 175   1          SDA = 1;                    //产生上升沿
 176   1          Delay5us();                 //延时
 177   1      }
 178          
 179          /**************************************
C51 COMPILER V9.54   MAIN                                                                  08/25/2023 20:11:43 PAGE 4   

 180          发送应答信号
 181          入口参数:ack (0:ACK 1:NAK)
 182          **************************************/
 183          void ADXL345_SendACK(bit ack)
 184          {
 185   1          SDA = ack;                  //写应答信号
 186   1          SCL = 1;                    //拉高时钟线
 187   1          Delay5us();                 //延时
 188   1          SCL = 0;                    //拉低时钟线
 189   1          Delay5us();                 //延时
 190   1      }
 191          
 192          /**************************************
 193          接收应答信号
 194          **************************************/
 195          bit ADXL345_RecvACK()
 196          {
 197   1          SCL = 1;                    //拉高时钟线
 198   1          Delay5us();                 //延时
 199   1          CY = SDA;                   //读应答信号
 200   1          SCL = 0;                    //拉低时钟线
 201   1          Delay5us();                 //延时
 202   1      
 203   1          return CY;
 204   1      }
 205          
 206          /**************************************
 207          向IIC总线发送一个字节数据
 208          **************************************/
 209          void ADXL345_SendByte(BYTE dat)
 210          {
 211   1          BYTE i;
 212   1      
 213   1          for (i=0; i<8; i++)         //8位计数器
 214   1          {
 215   2              dat <<= 1;              //移出数据的最高位
 216   2              SDA = CY;               //送数据口
 217   2              SCL = 1;                //拉高时钟线
 218   2              Delay5us();             //延时
 219   2              SCL = 0;                //拉低时钟线
 220   2              Delay5us();             //延时
 221   2          }
 222   1          ADXL345_RecvACK();
 223   1      }
 224          
 225          /**************************************
 226          从IIC总线接收一个字节数据
 227          **************************************/
 228          BYTE ADXL345_RecvByte()
 229          {
 230   1          BYTE i;
 231   1          BYTE dat = 0;
 232   1      
 233   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 234   1          for (i=0; i<8; i++)         //8位计数器
 235   1          {
 236   2              dat <<= 1;
 237   2              SCL = 1;                //拉高时钟线
 238   2              Delay5us();             //延时
 239   2              dat |= SDA;             //读数据               
 240   2              SCL = 0;                //拉低时钟线
 241   2              Delay5us();             //延时
C51 COMPILER V9.54   MAIN                                                                  08/25/2023 20:11:43 PAGE 5   

 242   2          }
 243   1          return dat;
 244   1      }
 245          
 246          //******单字节写入*******************************************
 247          
 248          void Single_Write_ADXL345(uchar REG_Address,uchar REG_data)
 249          {
 250   1          ADXL345_Start();                  //起始信号
 251   1          ADXL345_SendByte(SlaveAddress);   //发送设备地址+写信号
 252   1          ADXL345_SendByte(REG_Address);    //内部寄存器地址，请参考中文pdf22页 
 253   1          ADXL345_SendByte(REG_data);       //内部寄存器数据，请参考中文pdf22页 
 254   1          ADXL345_Stop();                   //发送停止信号
 255   1      }
 256          
 257          //********单字节读取*****************************************
 258          uchar Single_Read_ADXL345(uchar REG_Address)
 259          {  uchar REG_data;
 260   1          ADXL345_Start();                          //起始信号
 261   1          ADXL345_SendByte(SlaveAddress);           //发送设备地址+写信号
 262   1          ADXL345_SendByte(REG_Address);            //发送存储单元地址，从0开始 
 263   1          ADXL345_Start();                          //起始信号
 264   1          ADXL345_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 265   1          REG_data=ADXL345_RecvByte();              //读出寄存器数据
 266   1        ADXL345_SendACK(1);   
 267   1        ADXL345_Stop();                           //停止信号
 268   1          return REG_data; 
 269   1      }
 270          //*********************************************************
 271          //
 272          //连续读出ADXL345内部加速度数据，地址范围0x32~0x37
 273          //
 274          //*********************************************************
 275          void Multiple_read_ADXL345(void)
 276          {   uchar i;
 277   1          ADXL345_Start();                          //起始信号
 278   1          ADXL345_SendByte(SlaveAddress);           //发送设备地址+写信号
 279   1          ADXL345_SendByte(0x32);                   //发送存储单元地址，从0x32开始  
 280   1          ADXL345_Start();                          //起始信号
 281   1          ADXL345_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 282   1         for (i=0; i<6; i++)                      //连续读取6个地址数据，存储中BUF
 283   1          {
 284   2              BUF[i] = ADXL345_RecvByte();          //BUF[0]存储0x32地址中的数据
 285   2              if (i == 5)
 286   2              {
 287   3                 ADXL345_SendACK(1);                //最后一个数据需要回NOACK
 288   3              }
 289   2              else
 290   2              {
 291   3                ADXL345_SendACK(0);                //回应ACK
 292   3             }
 293   2         }
 294   1          ADXL345_Stop();                          //停止信号
 295   1          Delay5ms();
 296   1      }
 297          
 298          
 299          //*****************************************************************
 300          
 301          //初始化ADXL345，根据需要请参考pdf进行修改************************
 302          void Init_ADXL345()
 303          {
C51 COMPILER V9.54   MAIN                                                                  08/25/2023 20:11:43 PAGE 6   

 304   1         Single_Write_ADXL345(0x31,0x0B);   //测量范围,正负16g，13位模式
 305   1         Single_Write_ADXL345(0x2C,0x08);   //速率设定为12.5 参考pdf13页
 306   1         Single_Write_ADXL345(0x2D,0x08);   //选择电源模式   参考pdf24页
 307   1         Single_Write_ADXL345(0x2E,0x80);   //使能 DATA_READY 中断
 308   1         Single_Write_ADXL345(0x1E,0x00);   //X 偏移量 根据测试传感器的状态写入pdf29页
 309   1         Single_Write_ADXL345(0x1F,0x00);   //Y 偏移量 根据测试传感器的状态写入pdf29页
 310   1         Single_Write_ADXL345(0x20,0x05);   //Z 偏移量 根据测试传感器的状态写入pdf29页
 311   1      }
 312          //***********************************************************************
 313          //显示x轴
 314          void display_x()
 315          {   float temp;
 316   1          dis_data=(BUF[1]<<8)+BUF[0];  //合成数据   
 317   1        if(dis_data<0){
 318   2        dis_data=-dis_data;
 319   2          DisplayOneChar(10,0,'-');      //显示正负符号位
 320   2        }
 321   1        else DisplayOneChar(10,0,' '); //显示空格
 322   1      
 323   1          temp=(float)dis_data*3.9;  //计算数据和显示,查考ADXL345快速入门第4页
 324   1          conversion(temp);          //转换出显示需要的数据
 325   1          DisplayOneChar(8,0,'X');
 326   1          DisplayOneChar(9,0,':'); 
 327   1          DisplayOneChar(11,0,qian); 
 328   1          DisplayOneChar(12,0,'.'); 
 329   1          DisplayOneChar(13,0,bai); 
 330   1          DisplayOneChar(14,0,shi); 
 331   1          DisplayOneChar(15,0,' '); 
 332   1      }
 333          
 334          //***********************************************************************
 335          //显示y轴
 336          void display_y()
 337          {     float temp;
 338   1          dis_data=(BUF[3]<<8)+BUF[2];  //合成数据   
 339   1        if(dis_data<0){
 340   2        dis_data=-dis_data;
 341   2          DisplayOneChar(2,1,'-');      //显示正负符号位
 342   2        }
 343   1        else DisplayOneChar(2,1,' '); //显示空格
 344   1      
 345   1          temp=(float)dis_data*3.9;  //计算数据和显示,查考ADXL345快速入门第4页
 346   1          conversion(temp);          //转换出显示需要的数据
 347   1          DisplayOneChar(0,1,'Y');   //第1行，第0列 显示y
 348   1          DisplayOneChar(1,1,':'); 
 349   1          DisplayOneChar(3,1,qian); 
 350   1          DisplayOneChar(4,1,'.'); 
 351   1          DisplayOneChar(5,1,bai); 
 352   1          DisplayOneChar(6,1,shi);  
 353   1          DisplayOneChar(7,1,' ');  
 354   1      }
 355          
 356          //***********************************************************************
 357          //显示z轴
 358          void display_z()
 359          {
 360   1          float temp;
 361   1          dis_data=(BUF[5]<<8)+BUF[4];    //合成数据   
 362   1        if(dis_data<0){
 363   2        dis_data=-dis_data;
 364   2          DisplayOneChar(10,1,'-');       //显示负符号位
 365   2        }
C51 COMPILER V9.54   MAIN                                                                  08/25/2023 20:11:43 PAGE 7   

 366   1        else DisplayOneChar(10,1,' ');  //显示空格
 367   1      
 368   1          temp=(float)dis_data*3.9;  //计算数据和显示,查考ADXL345快速入门第4页
 369   1          conversion(temp);          //转换出显示需要的数据
 370   1          DisplayOneChar(8,1,'Z');  //第0行，第10列 显示Z
 371   1          DisplayOneChar(9,1,':'); 
 372   1          DisplayOneChar(11,1,qian); 
 373   1          DisplayOneChar(12,1,'.'); 
 374   1          DisplayOneChar(13,1,bai); 
 375   1          DisplayOneChar(14,1,shi); 
 376   1          DisplayOneChar(15,1,' ');  
 377   1      }
 378          
 379          
 380          //*********************************************************
 381          //******主程序********
 382          //*********************************************************
 383          void main()
 384          { 
 385   1        uchar devid;
 386   1        delay(500);                     //上电延时    
 387   1        InitLcd();                      //液晶初始化ADXL345
 388   1        
 389   1        DisplayOneChar(0,0,'A');
 390   1        DisplayOneChar(1,0,'D'); 
 391   1        DisplayOneChar(2,0,'X'); 
 392   1        DisplayOneChar(3,0,'L'); 
 393   1        DisplayOneChar(4,0,'3'); 
 394   1        DisplayOneChar(5,0,'4');  
 395   1        DisplayOneChar(6,0,'5'); 
 396   1        
 397   1        //Init_ADXL345();                   //初始化ADXL345
 398   1        //devid=Single_Read_ADXL345(0X00);  //读出的数据为0XE5,表示正确
 399   1        while(1)                          //循环
 400   1        { 
 401   2          DisplayOneChar(0,0,'A');
 402   2          DisplayOneChar(1,0,'D'); 
 403   2          DisplayOneChar(2,0,'X'); 
 404   2          DisplayOneChar(3,0,'L'); 
 405   2          DisplayOneChar(4,0,'3'); 
 406   2          DisplayOneChar(5,0,'4');  
 407   2          DisplayOneChar(6,0,'5'); 
 408   2          
 409   2          Init_ADXL345();                   //初始化ADXL345
 410   2          devid=Single_Read_ADXL345(0X00);  //读出的数据为0XE5,表示正确
 411   2          if(devid!=0XE5)
 412   2          {     
 413   3            DisplayOneChar(8,0,'N');
 414   3            DisplayOneChar(9,0,'o');    
 415   3            DisplayOneChar(10,0,' ');   
 416   3            DisplayOneChar(11,0,'F');
 417   3            DisplayOneChar(12,0,'i');
 418   3            DisplayOneChar(13,0,'n');
 419   3            DisplayOneChar(14,0,'d');   
 420   3            DisplayOneChar(15,0,'!');   
 421   3            //
 422   3            DisplayOneChar(0,1,' ');   //第1行，第0列 显示y
 423   3            DisplayOneChar(1,1,' '); 
 424   3            DisplayOneChar(2,1,' ');  
 425   3            DisplayOneChar(3,1,' '); 
 426   3            DisplayOneChar(4,1,' '); 
 427   3            DisplayOneChar(5,1,' '); 
C51 COMPILER V9.54   MAIN                                                                  08/25/2023 20:11:43 PAGE 8   

 428   3            DisplayOneChar(6,1,' ');  
 429   3            DisplayOneChar(7,1,' ');  
 430   3            DisplayOneChar(8,1,' ');  //第0行，第10列 显示Z
 431   3            DisplayOneChar(9,1,' '); 
 432   3            DisplayOneChar(11,1,' '); 
 433   3            DisplayOneChar(12,1,' '); 
 434   3            DisplayOneChar(13,1,' '); 
 435   3            DisplayOneChar(14,1,' '); 
 436   3            DisplayOneChar(15,1,' ');       
 437   3            
 438   3          }
 439   2          else
 440   2          {     
 441   3            Multiple_Read_ADXL345();        //连续读出数据，存储在BUF中
 442   3            display_x();                    //---------显示X轴
 443   3            display_y();                    //---------显示Y轴
 444   3            display_z();                    //---------显示Z轴          
 445   3          }      
 446   2          delay(350);                     //延时  
 447   2        }
 448   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1205    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
